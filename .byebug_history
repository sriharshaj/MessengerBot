c
response
c
respone["definitions"][payload["no"]]
respone[payload["no"]]
payload["no"]
respone
response
definition
c
payload["service"]
c
payload
c
definition_elements
c
definition_elements
c
response
definitions
index
element
c
response = RestClient.post "https://graph.facebook.com/v2.6/me/messages?access_token=#{@page_access_token}",message_data.to_json, :content_type => :json, :accept => :json
"https://graph.facebook.com/v2.6/me/messages?access_token=#{@page_access_token}"
RestClient.post "https://graph.facebook.com/v2.6/me/messages?access_token=#{@page_access_token}",message_data.to_json
response
response = RestClient.post "https://graph.facebook.com/v2.6/me/messages?access_token=#{@page_access_token}",message_data.to_json
response = RestClient.post "https://graph.facebook.com/v2.6/me/messages?access_token=#{@page_access_token}",message_data.to_json, :content_type => :json
response = RestClient.post "https://graph.facebook.com/v2.6/me/messages?access_token=#{@page_access_token}",message_data.to_json, :content_type => :json, :accept => :json
response = RestClient.post("https://graph.facebook.com/v2.6/me/messages?access_token=#{@page_access_token}",message_data.to_json),:content_type => :json, :accept => :json
message_data.to_json
message_data
c
RestClient.post "https://graph.facebook.com/v2.6/me/messages?access_token=EAAPtidyFOdUBAGhf3jQ29kwnrDQNoONxSa6ZAljwqJSQ6tWbZCuHsRz4p3LcATSMW0ZCzwDIaKxJCCbPpycztEYaZBORlCQ0rQZCohumIuNmdk9NM5EARv2wcsvatJnvScZBvS90ZBUZAtTFIYZCQkuavs446QMzwqqLsMOqPYhuQeQZDZD", message_data.to_json
RestClient "https://graph.facebook.com/v2.6/me/messages?access_token=EAAPtidyFOdUBAGhf3jQ29kwnrDQNoONxSa6ZAljwqJSQ6tWbZCuHsRz4p3LcATSMW0ZCzwDIaKxJCCbPpycztEYaZBORlCQ0rQZCohumIuNmdk9NM5EARv2wcsvatJnvScZBvS90ZBUZAtTFIYZCQkuavs446QMzwqqLsMOqPYhuQeQZDZD", message_data.to_json
c
response.message
response.url
response.body
response.code
response
response = HTTParty.post("https://graph.facebook.com/v2.6/me/messages",options)
options
c
params
c
options
c
options
c
options
c
options
message_data
options
response
c
options
c
response
c
message_data.to_json
message_data
response["error"]["message"]
c
message_data
response["error"]["message"]
c
response["error"]["message"]
message_data[:message][:attachment][:payload][:elements].count
message_data[:message][:attachment][:payload][:elements]
message_data[:message][:attachment][:payload]
message_data[:message][:attachment]
message_data[:message]
message_data
message_text
response["error"]["message"]
c
response["error"]["message"]
response["error"]
response["parsed_response"]
message_data
response
c
recipient_id
c
message_data
c
data["object"]
data.object
data = params
params
c
params
params["hub_mode"]
params["hub_mode"] == 'subscribe'
c
params["hub.mode"]
params
c
params["hub_mode"]
params
c
